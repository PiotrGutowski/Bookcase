@model IEnumerable<Bookcase.ClientRepository.Models.Book>

@{
    ViewBag.Title = "Index";
}

<h2>Book</h2>
@if (ViewBag.Error == true)
{
<div class="alert alert-danger" role="alert">
    Not Found<br />
    Try again.
</div>
}
<form asp-controller="Book" asp-action="Index">
    <p>
        Title: <input type="text" name="name">
        <input type="submit" value="Filter" />
    </p>
</form>
<br />
<p>
    @Html.ActionLink("Create New", "CreateBook")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Author.FullName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ISBN)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Published)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsAvailable)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Author.FullName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ISBN)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Published)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsAvailable)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.BookId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.BookId })
        </td>
    </tr>
}

</table>
